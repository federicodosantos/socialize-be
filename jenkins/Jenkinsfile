pipeline {
    agent any

    environment {
        DOCKER_COMPOSE_FILE = "docker-compose.yml"
        DOCKER_IMAGE = "backend-socialize"
        TARGET_URL = "http://localhost:8060"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code from SCM...'
                checkout scm
            }
        }

        stage('Build Docker Images') {
            steps {
                echo 'Building Docker image...'
                sh 'docker-compose -f $DOCKER_COMPOSE_FILE build'
            }
        }

        stage('Run Containers') {
            steps {
                echo 'Starting containers...'
                sh 'docker-compose -f $DOCKER_COMPOSE_FILE up -d'
            }
        }

        stage('Health Check') {
            steps {
                echo 'Checking service health...'
                retry(3) {
                    sh 'curl -f $TARGET_URL || exit 1'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube analysis...'
                withSonarQubeEnv('SonarQube') {
                    sh """
                        ./gradlew sonarqube \
                        -Dsonar.projectKey=backend-socialize \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_AUTH_TOKEN
                    """
                }
            }
        }

        stage('Deploy to Environment') {
            steps {
                echo 'Deploying services...'
                sh 'docker-compose -f $DOCKER_COMPOSE_FILE up -d'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up Docker resources...'
            sh 'docker-compose -f $DOCKER_COMPOSE_FILE down || true'
        }
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
    }
}
